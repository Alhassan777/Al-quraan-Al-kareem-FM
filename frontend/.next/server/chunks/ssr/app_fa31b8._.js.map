{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alhassanahmed/Downloads/quran-fm-next/frontend/app/components/Header.jsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nconst Header = ({ title, subtitle }) => {\n  return (\n    <header className=\"bg-[#112436] p-6 rounded-lg shadow-md text-[#C4A661] text-center\">\n      <h1 className=\"text-3xl font-bold\">{title}</h1>\n      {subtitle && <p className=\"text-lg mt-2 font-medium\">{subtitle}</p>}\n\n      {/* Navigation Links */}\n      <nav className=\"mt-4\">\n        {/* Note: Use \"href\" instead of \"to\" when using next/link */}\n        <Link\n          href=\"/\"\n          className=\"mr-4 text-[#C4A661] underline hover:text-[#E3B862] transition\"\n        >\n          الصفحة الرئيسية\n        </Link>\n        <Link\n          href=\"/schedule\"\n          className=\"text-[#C4A661] underline hover:text-[#E3B862] transition\"\n        >\n          جدول البرامج\n        </Link>\n      </nav>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  subtitle: '',\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAHA;;;;;AAMA,MAAM,SAAS,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;IACjC,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC;gBAAG,WAAU;0BAAsB;;;;;;YACnC,0BAAY,8OAAC;gBAAE,WAAU;0BAA4B;;;;;;0BAGtD,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,WAAU;kCACX;;;;;;kCAGD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;AAEA,OAAO,SAAS,GAAG;IACjB,OAAO,sIAAA,CAAA,UAAS,CAAC,MAAM,CAAC,UAAU;IAClC,UAAU,sIAAA,CAAA,UAAS,CAAC,MAAM;AAC5B;AAEA,OAAO,YAAY,GAAG;IACpB,UAAU;AACZ;uCAEe"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/alhassanahmed/Downloads/quran-fm-next/frontend/app/components/Player.jsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Play, Pause, Mic, StopCircle } from \"lucide-react\";\n\nconst Player = () => {\n  // ----------------------------------\n  //           STATE\n  // ----------------------------------\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [status, setStatus] = useState(\"Ready to play\");\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [volume, setVolume] = useState(1);\n  const [recordingDuration, setRecordingDuration] = useState(10);\n  const [isConverting, setIsConverting] = useState(false);\n  const [isLive, setIsLive] = useState(false);\n\n  // For blinking streaming icon\n  const [streamingBlink, setStreamingBlink] = useState(false);\n\n  // For flip animation on recording icon\n  const [recordingFlip, setRecordingFlip] = useState(false);\n\n  // ----------------------------------\n  //           REFS\n  // ----------------------------------\n  const audioRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const audioCtxRef = useRef(null);\n  const sourceNodeRef = useRef(null);\n  const destinationNodeRef = useRef(null);\n  const recordingTimeoutRef = useRef(null);\n\n  // Replace with your actual stream URL(s)\n  const streamUrls = [\"http://localhost:3001/proxyStream\"];\n\n  // ----------------------------------\n  //   EFFECTS: AUDIO INIT\n  // ----------------------------------\n  useEffect(() => {\n    if (typeof window.lamejs === \"undefined\") {\n      setStatus(\"Warning: lamejs not loaded. MP3 conversion will not work.\");\n    }\n\n    const initializeAudio = async () => {\n      if (!audioRef.current) {\n        setStatus(\"Audio element not ready.\");\n        return;\n      }\n\n      try {\n        // Set up audio context if not already done\n        if (!audioCtxRef.current) {\n          audioCtxRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        }\n\n        // Create media element source if not already done\n        if (!sourceNodeRef.current) {\n          sourceNodeRef.current = audioCtxRef.current.createMediaElementSource(audioRef.current);\n          sourceNodeRef.current.connect(audioCtxRef.current.destination);\n        }\n\n        // Create a MediaStreamDestination for recording\n        if (!destinationNodeRef.current) {\n          destinationNodeRef.current = audioCtxRef.current.createMediaStreamDestination();\n          sourceNodeRef.current.connect(destinationNodeRef.current);\n        }\n\n        // Create and configure MediaRecorder if not already done\n        if (!mediaRecorderRef.current) {\n          const mimeType = MediaRecorder.isTypeSupported(\"audio/webm;codecs=opus\")\n            ? \"audio/webm;codecs=opus\"\n            : \"audio/webm\";\n\n          const recorder = new MediaRecorder(destinationNodeRef.current.stream, {\n            mimeType,\n            bitsPerSecond: 128000,\n          });\n\n          recorder.ondataavailable = (event) => {\n            if (event.data && event.data.size > 0) {\n              setRecordedChunks((chunks) => [...chunks, event.data]);\n            }\n          };\n\n          mediaRecorderRef.current = recorder;\n        }\n\n        setStatus(\"Recording system initialized.\");\n      } catch (error) {\n        console.error(\"Error initializing audio:\", error);\n        setStatus(`Error initializing audio: ${error.message}`);\n      }\n    };\n\n    initializeAudio();\n\n    // Cleanup\n    return () => {\n      if (audioCtxRef.current) {\n        audioCtxRef.current.close();\n      }\n    };\n  }, []);\n\n  // ----------------------------------\n  //   EFFECT: BLINKING (STREAMING)\n  // ----------------------------------\n  useEffect(() => {\n    let intervalId;\n\n    if (isLive) {\n      // Toggle streamingBlink every 500 ms to blink\n      intervalId = setInterval(() => {\n        setStreamingBlink((prev) => !prev);\n      }, 500);\n    } else {\n      // If streaming is off, ensure blink is false\n      setStreamingBlink(false);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isLive]);\n\n  // ----------------------------------\n  //   EFFECT: FLIP ANIMATION (REC)\n  // ----------------------------------\n  useEffect(() => {\n    // Trigger flip animation whenever isRecording changes\n    setRecordingFlip(true);\n\n    const timer = setTimeout(() => {\n      setRecordingFlip(false);\n    }, 300); // match the duration of flip animation in CSS\n\n    return () => clearTimeout(timer);\n  }, [isRecording]);\n\n  // ----------------------------------\n  //   DERIVED IMAGE PATHS\n  // ----------------------------------\n  // 1) Streaming image: if isLive => blink between On/Off, else always Off\n  const streamingSrc = isLive\n    ? streamingBlink\n      ? \"Streaming On.png\"\n      : \"Streaming Off.png\"\n    : \"Streaming Off.png\";\n\n  // 2) Recording image: if isRecording => \"On\", else \"Off\"\n  const recordingSrc = isRecording ? \"Recording On.png\" : \"Recording Off.png\";\n\n  // ----------------------------------\n  //   HANDLERS\n  // ----------------------------------\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const togglePlayPause = async () => {\n    try {\n      if (!audioRef.current) return;\n\n      if (isPlaying) {\n        audioRef.current.pause();\n        setStatus(\"Playback paused\");\n        setIsPlaying(false);\n        setIsLive(false);\n      } else {\n        audioRef.current.src = streamUrls[0];\n        await audioRef.current.play();\n        setStatus(\"Playing stream\");\n        setIsPlaying(true);\n        setIsLive(true);\n      }\n    } catch (error) {\n      console.error(\"Playback error:\", error);\n      setStatus(`Playback error: ${error.message}`);\n    }\n  };\n\n  // Start or stop recording\n  const toggleRecording = () => {\n    if (!mediaRecorderRef.current) {\n      setStatus(\"Recording system not ready.\");\n      return;\n    }\n\n    if (isRecording) {\n      // Stop current recording\n      mediaRecorderRef.current.stop();\n      clearTimeout(recordingTimeoutRef.current);\n      setIsRecording(false);\n      setStatus(\"Recording stopped.\");\n\n      // Process the recorded chunks after a brief delay\n      setTimeout(() => {\n        if (recordedChunks.length > 0) {\n          const webmBlob = new Blob(recordedChunks, {\n            type: mediaRecorderRef.current.mimeType,\n          });\n          processRecording(webmBlob);\n          setRecordedChunks([]);\n        }\n      }, 100);\n    } else {\n      // Start a new recording\n      setRecordedChunks([]);\n      mediaRecorderRef.current.start(1000);\n      setIsRecording(true);\n      setStatus(\"Recording...\");\n\n      // Automatically stop after recordingDuration seconds\n      recordingTimeoutRef.current = setTimeout(() => {\n        mediaRecorderRef.current.stop();\n        setIsRecording(false);\n        setStatus(\"Recording stopped after time limit.\");\n\n        // Process the recorded chunks after a brief delay\n        setTimeout(() => {\n          if (recordedChunks.length > 0) {\n            const webmBlob = new Blob(recordedChunks, {\n              type: mediaRecorderRef.current.mimeType,\n            });\n            processRecording(webmBlob);\n            setRecordedChunks([]);\n          }\n        }, 200);\n      }, recordingDuration * 1000);\n    }\n  };\n\n  // ----------------------------------\n  // CONVERSION LOGIC (WEBM -> MP3)\n  // ----------------------------------\n  const processRecording = async (webmBlob) => {\n    setIsConverting(true);\n    setStatus(\"Converting to MP3...\");\n\n    try {\n      const arrayBuffer = await webmBlob.arrayBuffer();\n      const audioBuffer = await audioCtxRef.current.decodeAudioData(arrayBuffer);\n      const mp3Blob = await convertToMp3(audioBuffer);\n\n      const url = URL.createObjectURL(mp3Blob);\n      const a = document.createElement(\"a\");\n      const timestamp = new Date().toISOString().replace(/[:.]/g, \"-\");\n      a.href = url;\n      a.download = `recording_${timestamp}.mp3`;\n      a.click();\n      URL.revokeObjectURL(url);\n\n      setStatus(\"Recording downloaded as MP3.\");\n    } catch (error) {\n      console.error(\"Conversion error:\", error);\n      setStatus(\"Error converting to MP3. Downloading original format.\");\n\n      // Download the original WEBM if MP3 conversion fails\n      const url = URL.createObjectURL(webmBlob);\n      const a = document.createElement(\"a\");\n      const timestamp = new Date().toISOString().replace(/[:.]/g, \"-\");\n      a.href = url;\n      a.download = `recording_${timestamp}.webm`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const convertToMp3 = async (audioBuffer) => {\n    if (typeof window.lamejs === \"undefined\") {\n      throw new Error(\"lamejs not loaded\");\n    }\n\n    const channelData = audioBuffer.getChannelData(0);\n    const mp3Encoder = new window.lamejs.Mp3Encoder(1, audioBuffer.sampleRate, 128);\n    const sampleBlockSize = 1152;\n    const mp3Data = [];\n\n    for (let i = 0; i < channelData.length; i += sampleBlockSize) {\n      const sampleChunk = channelData.subarray(i, i + sampleBlockSize);\n      const mp3buf = mp3Encoder.encodeBuffer(convertFloat32ToInt16(sampleChunk));\n      if (mp3buf.length > 0) {\n        mp3Data.push(mp3buf);\n      }\n    }\n\n    const end = mp3Encoder.flush();\n    if (end.length > 0) {\n      mp3Data.push(end);\n    }\n\n    return new Blob(mp3Data, { type: \"audio/mp3\" });\n  };\n\n  // Helper to convert from Float32 to Int16\n  const convertFloat32ToInt16 = (float32Array) => {\n    const int16Array = new Int16Array(float32Array.length);\n    for (let i = 0; i < float32Array.length; i++) {\n      const s = Math.max(-1, Math.min(1, float32Array[i]));\n      int16Array[i] = s < 0 ? s * 0x8000 : s * 0x7fff;\n    }\n    return int16Array;\n  };\n\n  // ----------------------------------\n  //         RENDER\n  // ----------------------------------\n  return (\n    <div className=\"bg-[#1a2b47] w-full min-h-screen flex flex-col items-center justify-between py-6 px-4\">\n      {/* Inline CSS for flip animation */}\n      <style jsx>{`\n        .flip-animation {\n          animation: flip 0.3s forwards;\n        }\n        @keyframes flip {\n          0% {\n            transform: rotateY(0);\n          }\n          50% {\n            transform: rotateY(90deg);\n          }\n          100% {\n            transform: rotateY(180deg);\n          }\n        }\n      `}</style>\n\n      {/* Header / Logo */}\n      <div className=\"flex flex-col items-center mt-4\">\n        <img\n          src=\"/logo.png\"\n          alt=\"Station Logo\"\n          className=\"w-32 h-32 object-contain mb-4\"\n        />\n\n        <div className=\"text-center mb-6\">\n          <p className=\"text-xl text-white mb-1\">يتم الآن عرض برنامج</p>\n          <p className=\"text-lg text-[#C4A661]\">من حدائق الايمان</p>\n        </div>\n\n        {/* Playback & Recording Controls */}\n        <div className=\"flex items-center justify-center space-x-10\">\n          {/* Play / Pause */}\n          <button\n            onClick={togglePlayPause}\n            className=\"w-14 h-14 flex items-center justify-center rounded-full bg-white/10 hover:bg-white/20 transition-colors\"\n          >\n            {isPlaying ? (\n              <Pause size={28} className=\"text-white\" />\n            ) : (\n              <Play size={28} className=\"text-white\" />\n            )}\n          </button>\n\n          {/* Record / Stop */}\n          <button\n            onClick={toggleRecording}\n            className=\"w-14 h-14 flex items-center justify-center rounded-full bg-white/10 hover:bg-white/20 transition-colors\"\n          >\n            {isRecording ? (\n              <StopCircle size={28} className=\"text-white\" />\n            ) : (\n              <Mic size={28} className=\"text-white\" />\n            )}\n          </button>\n        </div>\n\n        {/* Volume / Recording Duration */}\n        <div className=\"flex flex-col items-center mt-8 space-y-4\">\n          {/* Volume Slider */}\n          <div className=\"flex items-center space-x-2\">\n            <label htmlFor=\"volume\" className=\"text-sm text-white/70\">\n              Volume\n            </label>\n            <input\n              id=\"volume\"\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={volume}\n              onChange={handleVolumeChange}\n              className=\"w-40\"\n            />\n          </div>\n\n          {/* Recording Duration Input */}\n          <div className=\"flex items-center space-x-2\">\n            <label htmlFor=\"duration\" className=\"text-sm text-white/70\">\n              Recording Limit (s)\n            </label>\n            <input\n              id=\"duration\"\n              type=\"number\"\n              min=\"5\"\n              max=\"60\"\n              value={recordingDuration}\n              onChange={(e) => setRecordingDuration(parseInt(e.target.value, 10))}\n              className=\"w-16 text-center text-white bg-white/10 border border-white/20 rounded\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Indicators & Status Messages */}\n      <div className=\"w-full max-w-xl mx-auto flex flex-col items-center mt-6\">\n        <div className=\"flex items-center space-x-8 mb-4\">\n          {/* Recording Indicator (slightly larger icon & extra space) */}\n          <div className=\"flex items-center space-x-3\">\n            <img\n              src={recordingSrc}\n              alt=\"Recording\"\n              className={`w-6 h-6 ${recordingFlip ? \"flip-animation\" : \"\"}`}\n            />\n            <span className=\"text-sm text-white/70\">REC</span>\n          </div>\n\n          {/* Streaming Indicator (blinking; enlarged icon & extra space) */}\n          <div className=\"flex items-center space-x-3\">\n            <img\n              src={streamingSrc}\n              alt=\"Live\"\n              className=\"w-6 h-6\"\n            />\n            <span className=\"text-sm text-white/70\">LIVE</span>\n          </div>\n        </div>\n\n        <div className=\"text-center text-white/50 text-sm px-4\">\n          <p>{status}</p>\n          {isConverting && <p className=\"mt-1\">Converting... Please wait</p>}\n        </div>\n      </div>\n\n      {/* Hidden audio element (for playback & recording) */}\n      <audio\n        ref={audioRef}\n        preload=\"auto\"\n        crossOrigin=\"anonymous\"\n        className=\"hidden\"\n      />\n    </div>\n  );\n};\n\nexport default Player;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":["file:///Users/alhassanahmed/Downloads/quran-fm-next/frontend/app/components/Status.jsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircle, XCircle, Info, AlertCircle } from 'lucide-react';\n\nconst Status = ({ message, type, autoDismiss, onDismiss, dismissTime, customIcon }) => {\n  const [visible, setVisible] = useState(true);\n\n  const statusStyles = {\n    success: \"bg-green-500 text-white\",\n    error: \"bg-red-500 text-white\",\n    info: \"bg-blue-500 text-white\",\n    default: \"bg-[#112436] text-[#C4A661]\",\n  };\n\n  const statusIcons = {\n    success: <CheckCircle className=\"w-6 h-6 mr-2\" />,\n    error: <XCircle className=\"w-6 h-6 mr-2\" />,\n    info: <Info className=\"w-6 h-6 mr-2\" />,\n    default: <AlertCircle className=\"w-6 h-6 mr-2\" />,\n  };\n\n  useEffect(() => {\n    if (autoDismiss && (type === 'success' || type === 'info')) {\n      const timer = setTimeout(() => {\n        setVisible(false); // Start fading out\n        setTimeout(() => onDismiss && onDismiss(), 300); // Wait for fade-out\n      }, dismissTime - 300);\n      return () => clearTimeout(timer);\n    }\n  }, [type, autoDismiss, dismissTime, onDismiss]);\n\n  if (!visible) return null;\n\n  return (\n    <div\n      role={type === 'error' ? 'alert' : 'status'}\n      className={`p-4 rounded-lg shadow-md flex items-center transition-opacity duration-300 ${\n        statusStyles[type] || statusStyles.default\n      }`}\n    >\n      {customIcon || statusIcons[type] || statusIcons.default}\n      <p className=\"text-lg font-bold\">{message}</p>\n    </div>\n  );\n};\n\nStatus.propTypes = {\n  message: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['success', 'error', 'info', 'default']),\n  autoDismiss: PropTypes.bool,\n  onDismiss: PropTypes.func,\n  dismissTime: PropTypes.number,\n  customIcon: PropTypes.node,\n};\n\nStatus.defaultProps = {\n  type: 'default',\n  autoDismiss: false,\n  dismissTime: 5000,\n  onDismiss: null,\n  customIcon: null,\n};\n\nexport default Status;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAAA;AAAA;AAAA;AADA;AAHA;;;;;AAMA,MAAM,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe;QACnB,SAAS;QACT,OAAO;QACP,MAAM;QACN,SAAS;IACX;IAEA,MAAM,cAAc;QAClB,uBAAS,8OAAC,2NAAA,CAAA,cAAW;YAAC,WAAU;;;;;;QAChC,qBAAO,8OAAC,4MAAA,CAAA,UAAO;YAAC,WAAU;;;;;;QAC1B,oBAAM,8OAAC,kMAAA,CAAA,OAAI;YAAC,WAAU;;;;;;QACtB,uBAAS,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;IAClC;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,eAAe,CAAC,SAAS,aAAa,SAAS,MAAM,GAAG;YAC1D,MAAM,QAAQ,WAAW;gBACvB,WAAW,QAAQ,mBAAmB;gBACtC,WAAW,IAAM,aAAa,aAAa,MAAM,oBAAoB;YACvE,GAAG,cAAc;YACjB,OAAO,IAAM,aAAa;QAC5B;IACF,GAAG;QAAC;QAAM;QAAa;QAAa;KAAU;IAE9C,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,8OAAC;QACC,MAAM,SAAS,UAAU,UAAU;QACnC,WAAW,CAAC,2EAA2E,EACrF,YAAY,CAAC,KAAK,IAAI,aAAa,OAAO,EAC1C;;YAED,cAAc,WAAW,CAAC,KAAK,IAAI,YAAY,OAAO;0BACvD,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;;;;;;;AAGxC;AAEA,OAAO,SAAS,GAAG;IACjB,SAAS,sIAAA,CAAA,UAAS,CAAC,MAAM,CAAC,UAAU;IACpC,MAAM,sIAAA,CAAA,UAAS,CAAC,KAAK,CAAC;QAAC;QAAW;QAAS;QAAQ;KAAU;IAC7D,aAAa,sIAAA,CAAA,UAAS,CAAC,IAAI;IAC3B,WAAW,sIAAA,CAAA,UAAS,CAAC,IAAI;IACzB,aAAa,sIAAA,CAAA,UAAS,CAAC,MAAM;IAC7B,YAAY,sIAAA,CAAA,UAAS,CAAC,IAAI;AAC5B;AAEA,OAAO,YAAY,GAAG;IACpB,MAAM;IACN,aAAa;IACb,aAAa;IACb,WAAW;IACX,YAAY;AACd;uCAEe"}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file:///Users/alhassanahmed/Downloads/quran-fm-next/frontend/app/components/VolumeSlider.jsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\n\nconst VolumeSlider = () => {\n  const [volume, setVolume] = useState(80);\n  const [status, setStatus] = useState(\"مرحبًا بك! جاهز لتعديل مستوى الصوت.\");\n\n  // Volume change handler\n  const handleVolumeChange = (e) => {\n    const newVolume = Number(e.target.value);\n    setVolume(newVolume);\n\n    if (newVolume === 0) {\n      setStatus(\"تم كتم الصوت.\");\n    } else {\n      setStatus(`تم تعديل مستوى الصوت إلى ${newVolume}%.`);\n    }\n  };\n\n  return (\n    <div className=\"bg-[#112436] p-6 rounded-lg shadow-md text-[#C4A661]\">\n      {/* Volume Control */}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        value={volume}\n        onChange={handleVolumeChange}\n        className=\"w-full max-w-md h-2 bg-[#C4A661]/20 rounded-full appearance-none cursor-pointer\"\n        style={{\n          background: `linear-gradient(to right, #C4A661 ${volume}%, rgba(196, 166, 97, 0.2) ${volume}%)`\n        }}\n      />\n\n      {/* Status Display */}\n      <div className=\"status p-3 rounded-md mt-4 text-lg shadow-md bg-[#112436]\">\n        <p>{status}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default VolumeSlider;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,eAAe;IACnB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,wBAAwB;IACxB,MAAM,qBAAqB,CAAC;QAC1B,MAAM,YAAY,OAAO,EAAE,MAAM,CAAC,KAAK;QACvC,UAAU;QAEV,IAAI,cAAc,GAAG;YACnB,UAAU;QACZ,OAAO;YACL,UAAU,CAAC,yBAAyB,EAAE,UAAU,EAAE,CAAC;QACrD;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,MAAK;gBACL,KAAI;gBACJ,KAAI;gBACJ,OAAO;gBACP,UAAU;gBACV,WAAU;gBACV,OAAO;oBACL,YAAY,CAAC,kCAAkC,EAAE,OAAO,2BAA2B,EAAE,OAAO,EAAE,CAAC;gBACjG;;;;;;0BAIF,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;8BAAG;;;;;;;;;;;;;;;;;AAIZ;uCAEe"}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":["file:///Users/alhassanahmed/Downloads/quran-fm-next/frontend/app/page.js"],"sourcesContent":["\"use client\";\n\nimport Header from './components/Header.jsx';\nimport Player from './components/Player.jsx';\nimport Status from './components/Status.jsx';\nimport VolumeSlider from './components/VolumeSlider.jsx';\nimport { useState } from 'react';\nimport '../style/global.css';\n\nexport default function Home() {\n  const [statusMessage, setStatusMessage] = useState(\"مرحبًا بك! جاهز لبث إذاعة القرآن الكريم.\");\n  const [statusType, setStatusType] = useState(\"default\");\n  const [volume, setVolume] = useState(80);\n\n  const handleVolumeChange = (newVolume) => {\n    setVolume(newVolume);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#0A1828] text-[#C4A661]\">\n      {/* Updated Header Component */}\n      <Header\n        title=\"إذاعة القرآن الكريم\"\n        subtitle=\"استمع لأجمل تلاوات القرآن الكريم\"\n      />\n\n      {/* Main Content */}\n      <main className=\"max-w-5xl mx-auto px-4 py-6 space-y-6\">\n        {/* Status Display */}\n        <Status message={statusMessage} type={statusType} />\n\n        {/* Player Component */}\n        <Player\n          streamUrl=\"https://n10.radiojar.com/8s5u5tpdtwzuv?rj-ttl=5&rj-tok=AAABk-06_7wAAb2D9o5zdb4y4A\"\n          setStatusMessage={setStatusMessage}\n          setStatusType={setStatusType}\n        />\n\n        {/* Volume Slider Component */}\n        <VolumeSlider volume={volume} onVolumeChange={handleVolumeChange} />\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,qBAAqB,CAAC;QAC1B,UAAU;IACZ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,4HAAA,CAAA,UAAM;gBACL,OAAM;gBACN,UAAS;;;;;;0BAIX,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC,4HAAA,CAAA,UAAM;wBAAC,SAAS;wBAAe,MAAM;;;;;;kCAGtC,8OAAC,4HAAA,CAAA,UAAM;wBACL,WAAU;wBACV,kBAAkB;wBAClB,eAAe;;;;;;kCAIjB,8OAAC,kIAAA,CAAA,UAAY;wBAAC,QAAQ;wBAAQ,gBAAgB;;;;;;;;;;;;;;;;;;AAItD"}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}